{"name":"Piavi","tagline":"PiaVI : Pi interactive Audio Visual Interface","body":"\r\n### Abstract\r\n\r\nAssembler un environnement de lecture et de génération audiovisuel interactif à la fois autonome et asservissable.\r\n\r\nCréer différents modules répondant aux besoins d'aquisitions, de traitement et de diffusions des données.\r\n\r\nChaque module communique par un protocol standardisé (OSC - open sound control) rendant le déploiment modulaire.\r\n\r\n\r\nEn X composantes\r\n\r\n  - Service GPIO (protocol  OSC)\r\n  - Module de lecture et de sythèse sonore  (pure data vanilla?)\r\n  - Module de lecture vidéo  (omx player osc wrapper?)\r\n  - Module de génération visuel (openframework?)\r\n  - Exposer les paramètres modifiable via une interface web\r\n  - Webserver permetant le controle de paramètre (node.js, socket.io et OSC)\r\n  -\r\nCommunique bidirectionnellement avec des paramètres interne via le protocol OSC.  \r\n\r\n### Installation\r\ngit clone --recursive\r\n\r\nPour le pi :\r\nsuivre d'abord ce guide\r\n[https://learn.adafruit.com/node-embedded-development/installing-node-dot-js](https://learn.adafruit.com/node-embedded-development/installing-node-dot-js)\r\n### liens\r\n\r\naide à configurer\r\n\r\n[https://github.com/adafruit/Adafruit-Pi-Finder](https://github.com/adafruit/Adafruit-Pi-Finder)\r\n\r\n\r\nà implémenter :\r\n\r\n[https://learn.adafruit.com/raspberry-pi-open-sound-control/interacting-with-a-web-browser](https://learn.adafruit.com/raspberry-pi-open-sound-control/interacting-with-a-web-browser)\r\n\r\nà fouiller :\r\n\r\n[https://github.com/russellmcc/node-osc-min](https://github.com/russellmcc/node-osc-min)\r\n\r\n\r\n\r\nOSC et GPIO :\r\n\r\n[http://www.instructables.com/id/Raspberry-Pi-GPIO-home-automation/step6/Install-App/](http://www.instructables.com/id/Raspberry-Pi-GPIO-home-automation/step6/Install-App/)\r\n\r\n[https://github.com/misterhay/RasCough/blob/master/RasCough.py](https://github.com/misterhay/RasCough/blob/master/RasCough.py)\r\n\r\n[https://github.com/soundmaking/RPi8pinIO](https://github.com/soundmaking/RPi8pinIO)\r\n\r\n\r\naudio :\r\n\r\n[https://github.com/yomguy/PiPlayer](https://github.com/yomguy/PiPlayer)\r\n\r\n[https://github.com/jacoscaz/osc-browser-synth](https://github.com/jacoscaz/osc-browser-synth)\r\n\r\nVidéo :\r\n\r\n\r\nInterface :\r\n\r\n[https://github.com/lsu-emdm/nexusUI](https://github.com/lsu-emdm/nexusUI)\r\n\r\n[http://reactivemusic.net/?tag=osc](http://reactivemusic.net/?tag=osc)\r\n\r\nUn projet qui regroupe beaucoup des fonctionnalité\r\n[http://pocketvj.com](http://pocketvj.com)\r\n\r\nVideo player OSC  (openframework et omxplayer)\r\n[https://github.com/Hemisphere-Project/HPlayer](https://github.com/Hemisphere-Project/HPlayer)\r\n\r\nbasé sur :\r\n[https://github.com/jvcleave/ofxOMXPlayer](https://github.com/jvcleave/ofxOMXPlayer)\r\n\r\n\r\nInvestiguer Node-Red\r\n\r\n\r\n\r\ninvestiguer gstreamer\r\n\r\n[https://wiki.matthiasbock.net/index.php/Hardware-accelerated_video_playback_on_the_Raspberry_Pi](https://wiki.matthiasbock.net/index.php/Hardware-accelerated_video_playback_on_the_Raspberry_Pi)\r\n\r\n[http://www.onepitwopi.com/raspberry-pi/gstreamer-1-2-on-the-raspberry-pi/](http://www.onepitwopi.com/raspberry-pi/gstreamer-1-2-on-the-raspberry-pi/)\r\n\r\nhttp://blog.pi3g.com/2013/08/ffmpeg-gstreamer-raspberry-pi-windows-desktop-streaming/\r\n\r\n[http://rpiquadcopter.blogspot.fi/2014/06/raspberry-pi-camera-module-video.html](http://rpiquadcopter.blogspot.fi/2014/06/raspberry-pi-camera-module-video.html)\r\n\r\n[https://github.com/avilleret/rpi_osc_video_player](https://github.com/avilleret/rpi_osc_video_player)\r\n\r\ninvestiguer DBUS\r\n\r\nhttp://dbus.freedesktop.org/doc/dbus-python/doc/tutorial.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}